name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: '18.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret
        MONGODB_URI: mongodb://localhost:27017/csm-test

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_TOKEN }}
        wait: true
        retries: 20
        retry-interval: 30

    - name: Verify deployment
      run: |
        echo "Waiting for deployment to complete..."
        sleep 60  # Initial wait for deployment to start
        
        MAX_RETRIES=20
        RETRY_COUNT=0
        HEALTH_URL="https://csm-app.onrender.com/health"
        
        while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $HEALTH_URL)
          if [ $HTTP_STATUS -eq 200 ]; then
            HEALTH_CHECK=$(curl -s $HEALTH_URL)
            if [[ $HEALTH_CHECK == *"healthy"* ]] && [[ $HEALTH_CHECK == *"connected"* ]]; then
              echo " Deployment verified successfully!"
              echo "Health check response: $HEALTH_CHECK"
              exit 0
            fi
          fi
          echo "Attempt $((RETRY_COUNT + 1))/$MAX_RETRIES: Service not ready, waiting 30 seconds..."
          sleep 30
          RETRY_COUNT=$((RETRY_COUNT + 1))
        done
        
        echo " Deployment verification failed after $MAX_RETRIES attempts"
        echo "Last health check response: $(curl -s $HEALTH_URL)"
        exit 1
