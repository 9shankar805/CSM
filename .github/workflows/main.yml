name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: '18.x'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret
        MONGODB_URI: mongodb://localhost:27017/csm-test

  deploy:
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Deploy to Render
      uses: JorgeLNJunior/render-deploy@v1.4.3
      with:
        service_id: ${{ secrets.RENDER_SERVICE_ID }}
        api_key: ${{ secrets.RENDER_TOKEN }}
        wait_deploy: true
        deployment_environment: production

    - name: Verify deployment
      run: |
        echo "Waiting for deployment to initialize..."
        sleep 30
        
        MAX_RETRIES=10
        RETRY_COUNT=0
        HEALTH_URL="https://csm-app.onrender.com/health"
        
        while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
          echo "Checking deployment status (Attempt $((RETRY_COUNT + 1))/$MAX_RETRIES)..."
          
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $HEALTH_URL || echo "failed")
          
          if [ "$HTTP_STATUS" = "200" ]; then
            RESPONSE=$(curl -s $HEALTH_URL)
            if [[ $RESPONSE == *"healthy"* ]]; then
              echo " Deployment verified successfully!"
              echo "Health check response: $RESPONSE"
              exit 0
            fi
          fi
          
          echo "Service not ready (HTTP Status: $HTTP_STATUS). Waiting 30 seconds..."
          sleep 30
          RETRY_COUNT=$((RETRY_COUNT + 1))
        done
        
        echo " Deployment verification failed after $MAX_RETRIES attempts"
        exit 1
